//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.1
//     from Assets/Input/VRBindings.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @VRBindings: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @VRBindings()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""VRBindings"",
    ""maps"": [
        {
            ""name"": ""Oculus"",
            ""id"": ""e1c74424-2b7a-4377-abb6-cdcff93a6e7f"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""7906da8e-485e-469e-ae0c-5343fdc56869"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Turn"",
                    ""type"": ""Value"",
                    ""id"": ""9fa6805c-6c8b-474c-b3ed-f03abc08c0e0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""9a947bae-4eec-45fb-a3be-5ffd61813971"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dashboard"",
                    ""type"": ""Button"",
                    ""id"": ""1e580be4-d59f-4d49-a161-fe883cf76d18"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Action"",
                    ""type"": ""Button"",
                    ""id"": ""9463ed60-4391-407b-b0d6-3131b528b5a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ToggleMicrophone"",
                    ""type"": ""Button"",
                    ""id"": ""fbf0f572-9cc5-4680-9293-4c692071b926"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryClick"",
                    ""type"": ""Value"",
                    ""id"": ""fd22895e-a3f4-41c0-98e6-522188044cef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryClick"",
                    ""type"": ""Value"",
                    ""id"": ""3fc279dd-d76e-4958-931f-7b62db13aa31"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftGrab"",
                    ""type"": ""Value"",
                    ""id"": ""32174d01-273c-4778-9ab3-89e0aca4f605"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightGrab"",
                    ""type"": ""Value"",
                    ""id"": ""e98f3955-d132-4640-817d-007a561a095d"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""dd0b6052-04e6-4ce4-92c9-6166a8930e60"",
                    ""path"": ""<OculusTouchController>{LeftHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2883ae52-f71b-4942-bce1-3e12db2a6934"",
                    ""path"": ""<OculusTouchController>{RightHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8382e9f-302f-4194-8e65-f67f5e474cad"",
                    ""path"": ""<OculusTouchController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0ca672c8-e510-46e3-9237-c83e3f1d7e62"",
                    ""path"": ""<OculusTouchController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dashboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc39162a-3b28-4525-a9c9-934ede8ed1ae"",
                    ""path"": ""<OculusTouchController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38d9435c-ee16-41c9-b363-2f1413ef0117"",
                    ""path"": ""<OculusTouchController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMicrophone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d71bada4-c5af-434f-934f-b2e4707cde32"",
                    ""path"": ""<OculusTouchController>{RightHand}/thumbstickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9815d98d-7a1b-461b-8cc0-c37c1274cd65"",
                    ""path"": ""<OculusTouchController>{LeftHand}/thumbstickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f0f2f35-cd17-4da5-9d09-daa5231d9649"",
                    ""path"": ""<OculusTouchController>{LeftHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftGrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""751f7724-9bee-4c6a-9683-dabd8bccfb51"",
                    ""path"": ""<OculusTouchController>{RightHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightGrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Index"",
            ""id"": ""cff476ec-d35f-430f-8579-50a2a02ca823"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""16d4fb65-4056-4461-b688-fe477cfe7209"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Turn"",
                    ""type"": ""Value"",
                    ""id"": ""d14a2ec0-ce4d-4d86-ba43-88f26e456639"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Value"",
                    ""id"": ""ab694daa-4f27-4c65-9540-d357476809df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dashboard"",
                    ""type"": ""Value"",
                    ""id"": ""1b076dcc-053a-4ecb-bf3f-3a3116ee10e4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Action"",
                    ""type"": ""Value"",
                    ""id"": ""3e9b17bb-7950-4c4f-89d8-99de7815a6e0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ToggleMicrophone"",
                    ""type"": ""Value"",
                    ""id"": ""df203c82-edfe-40d3-bb31-975602e77db5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryClick"",
                    ""type"": ""Value"",
                    ""id"": ""c6105fd1-beee-43f6-90dd-49a42c54cdd3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryClick"",
                    ""type"": ""Value"",
                    ""id"": ""4325ac42-f1f9-463a-b9ec-4f689132bf00"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftGrab"",
                    ""type"": ""Value"",
                    ""id"": ""a660a13e-a878-4c6b-a473-952cbb123bb4"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightGrab"",
                    ""type"": ""Value"",
                    ""id"": ""a3b323be-a702-4b11-a3b3-23c13df099fa"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""466f4ee2-e04d-4c99-9ffc-a6b887df3223"",
                    ""path"": ""<ValveIndexController>{LeftHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d56f98d-dc22-4473-8e23-bca1619d8903"",
                    ""path"": ""<ValveIndexController>{RightHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3f746af-e0e0-4a02-b2a0-6ddd48168c11"",
                    ""path"": ""<ValveIndexController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b83578f0-eb70-49d1-95db-e5e6f3b5cc6e"",
                    ""path"": ""<ValveIndexController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dashboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96911689-da96-462d-b44e-f2a49b9309a1"",
                    ""path"": ""<ValveIndexController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc9def97-0c8f-4a7b-a864-0d33326b22c5"",
                    ""path"": ""<ValveIndexController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMicrophone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""966849e1-189f-4cc5-9113-d94e75c719dc"",
                    ""path"": ""<ValveIndexController>{RightHand}/thumbstickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ede821c-f85c-4d4b-aec1-9c0037b52c91"",
                    ""path"": ""<ValveIndexController>{LeftHand}/thumbstickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57ae6e7a-3bf7-4658-8128-127308c3b0dd"",
                    ""path"": ""<ValveIndexController>{LeftHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftGrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9eb3414-8068-4e27-823d-e5731849a2e0"",
                    ""path"": ""<ValveIndexController>{RightHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightGrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Vive"",
            ""id"": ""605ad834-7678-47ab-99b0-d25fafc115ee"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""18c65b16-3cab-420d-b63d-9d7868d18718"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Turn"",
                    ""type"": ""Value"",
                    ""id"": ""e108b355-1036-48ae-8b4e-df5374ff5e88"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Value"",
                    ""id"": ""51dcfdb2-8a0c-483a-8c65-514e58daf03b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dashboard"",
                    ""type"": ""Value"",
                    ""id"": ""2a2e6274-6e5e-447b-8c1d-03522ae8a9fd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Action"",
                    ""type"": ""Value"",
                    ""id"": ""1449ca77-d43c-41d2-a642-321d003e1c39"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ToggleMicrophone"",
                    ""type"": ""Value"",
                    ""id"": ""23894de4-cfab-4491-86a7-d88698296634"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryClick"",
                    ""type"": ""Value"",
                    ""id"": ""cfe6d576-00ef-4036-871c-1f101a7cc173"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryClick"",
                    ""type"": ""Value"",
                    ""id"": ""2a39fff3-0e26-48b9-92ad-22947bf49e06"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftGrab"",
                    ""type"": ""Value"",
                    ""id"": ""4ae8f904-aa25-4905-9a5c-1e0342a187ef"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightGrab"",
                    ""type"": ""Value"",
                    ""id"": ""a71637d6-d236-407b-92d7-cff58ef37ac0"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f7551e40-dccc-4d67-9b74-590a46fe7f4a"",
                    ""path"": ""<ViveController>{LeftHand}/trackpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd86a0eb-b323-4d49-9c76-69a3a4040207"",
                    ""path"": ""<ViveController>{RightHand}/trackpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c146b884-4ba1-4b44-a411-00faa2452604"",
                    ""path"": ""<ViveController>{RightHand}/trackpadClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35cfff9e-1e72-4460-9f8e-9b0d075539a9"",
                    ""path"": ""<ViveController>{RightHand}/trackpadClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dashboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e719e5f2-2da1-4a49-9872-28e3ea967d94"",
                    ""path"": ""<ViveController>{LeftHand}/trackpadClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85cf5f61-fb8d-41a3-a8ca-58e2b85bc08d"",
                    ""path"": ""<ViveController>{LeftHand}/trackpadClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMicrophone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c51e904-af4c-44d4-82f3-d5bcf4a5f414"",
                    ""path"": ""<ViveController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""53698cdc-f39e-4807-9377-065a2eba5176"",
                    ""path"": ""<ViveController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa5a0ecc-fc4b-4026-8440-855427266380"",
                    ""path"": ""<ViveController>{LeftHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftGrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b331eda-b550-43d2-8c4d-5aa181a3a352"",
                    ""path"": ""<ViveController>{RightHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightGrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Unknown"",
            ""id"": ""ada9a206-01b5-4ccc-be44-200e12f0e1c2"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""aee33da7-d78b-4e1f-8244-9d150e33b705"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Turn"",
                    ""type"": ""Value"",
                    ""id"": ""adbaeed8-0279-42d5-9988-0dbd739b6d63"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""3cd66113-2dce-4bd9-a1fa-93cda574644d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dashboard"",
                    ""type"": ""Button"",
                    ""id"": ""e434db37-bc02-4131-9f4a-00b92eb4a624"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Action"",
                    ""type"": ""Button"",
                    ""id"": ""2be71d9b-6a80-4027-990a-a615164757d9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ToggleMicrophone"",
                    ""type"": ""Button"",
                    ""id"": ""130620ad-78f1-4141-aa11-c998dace6579"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryClick"",
                    ""type"": ""Value"",
                    ""id"": ""8a496322-2192-4dcd-a28a-b894cd636ae3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryClick"",
                    ""type"": ""Value"",
                    ""id"": ""bf7ed347-ffdc-425e-8d63-fcd5a849127a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftGrab"",
                    ""type"": ""Value"",
                    ""id"": ""7e28af1b-40f1-4769-83bb-b19254343982"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightGrab"",
                    ""type"": ""Value"",
                    ""id"": ""16cf87d9-7c15-4f7b-a163-3e751b79c6d8"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftFootTrackerIsTracked"",
                    ""type"": ""Button"",
                    ""id"": ""a8239ebd-b2ae-4097-b5bb-503f4ffd5e23"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftFootTrackerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""54300096-29ba-45ce-9158-3be3ea713b08"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftFootTrackerRotation"",
                    ""type"": ""Value"",
                    ""id"": ""210d54c2-86e7-4e09-afa6-6019ce69968c"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightFootTrackerIsTracked"",
                    ""type"": ""Button"",
                    ""id"": ""398308e1-0263-4527-b4c8-42b1efe0348b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightFootTrackerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""8505775e-a053-4a90-af38-80a0d31a8471"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightFootTrackerRotation"",
                    ""type"": ""Value"",
                    ""id"": ""09a98783-048d-42e6-8bf1-c670d0c906b7"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""HipTrackerIsTracked"",
                    ""type"": ""Button"",
                    ""id"": ""c7ad360b-6419-4d5b-8688-b2abc32e03a2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HipTrackerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""3787aa73-7527-4841-a265-9176b80ce780"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""HipTrackerRotation"",
                    ""type"": ""Value"",
                    ""id"": ""f91e0c7a-e2c2-430e-aaea-b9ae9375c728"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1bdc9e8b-bd20-42f4-899d-f8af8b94b167"",
                    ""path"": ""<XRController>{LeftHand}/joystick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5adfa67-1f85-4ab5-88f9-94c9b0f7fe87"",
                    ""path"": ""<XRController>{RightHand}/joystick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c87b9b5-3eee-42e3-88f4-dca2fc09b62d"",
                    ""path"": ""<XRController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""636fb2ab-ddc8-4b8e-8cba-2be3fbaacb56"",
                    ""path"": ""<XRController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dashboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""011f90ed-ee8a-4852-9d45-84b0b32867d1"",
                    ""path"": ""<XRController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e773a0e2-8595-4bb2-9f25-485449b534c3"",
                    ""path"": ""<XRController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMicrophone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3e1dd11-3f71-4ae6-899e-209d9388c9cd"",
                    ""path"": ""<XRController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""960f61d8-0da1-4c05-8b16-a9e0d6bd4b5b"",
                    ""path"": ""<XRController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45bb07b4-9a90-4547-b20f-3dbdd0276bb4"",
                    ""path"": ""<XRController>{LeftHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftGrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42dcd403-05ae-4a7e-b854-9139ab650db8"",
                    ""path"": ""<XRController>{RightHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightGrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""02918646-b591-489e-a8d1-dce4411d32af"",
                    ""path"": ""<XRViveTracker>{Left Foot}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftFootTrackerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a163b9f0-6f97-45ff-a8a3-ae8479a5f076"",
                    ""path"": ""<XRViveTracker>{Left Foot}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftFootTrackerRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d7a0a67-e31e-4a9c-a91a-b60dc7eb7225"",
                    ""path"": ""<XRViveTracker>{Right Foot}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightFootTrackerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f6f6b03-75cf-4f39-b9ee-f006a56a6d7b"",
                    ""path"": ""<XRViveTracker>{Right Foot}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightFootTrackerRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e31b4dc-d663-4d5b-afe6-7212063f14fb"",
                    ""path"": ""<XRViveTracker>{Waist}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HipTrackerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2105a717-92fb-4a74-8d4c-a391a1789dd5"",
                    ""path"": ""<XRViveTracker>{Waist}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HipTrackerRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4467c2e-6df0-47cf-8075-d8f7680f2c59"",
                    ""path"": ""<XRViveTracker>{Left Foot}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftFootTrackerIsTracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d938ab0-43ff-47cb-ba2d-50b8c52657cf"",
                    ""path"": ""<XRViveTracker>{Right Foot}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightFootTrackerIsTracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0ca60e3-0b98-4ad6-936a-2b3b73ecbdfe"",
                    ""path"": ""<XRViveTracker>{Waist}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HipTrackerIsTracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Oculus
        m_Oculus = asset.FindActionMap("Oculus", throwIfNotFound: true);
        m_Oculus_Move = m_Oculus.FindAction("Move", throwIfNotFound: true);
        m_Oculus_Turn = m_Oculus.FindAction("Turn", throwIfNotFound: true);
        m_Oculus_Jump = m_Oculus.FindAction("Jump", throwIfNotFound: true);
        m_Oculus_Dashboard = m_Oculus.FindAction("Dashboard", throwIfNotFound: true);
        m_Oculus_Action = m_Oculus.FindAction("Action", throwIfNotFound: true);
        m_Oculus_ToggleMicrophone = m_Oculus.FindAction("ToggleMicrophone", throwIfNotFound: true);
        m_Oculus_PrimaryClick = m_Oculus.FindAction("PrimaryClick", throwIfNotFound: true);
        m_Oculus_SecondaryClick = m_Oculus.FindAction("SecondaryClick", throwIfNotFound: true);
        m_Oculus_LeftGrab = m_Oculus.FindAction("LeftGrab", throwIfNotFound: true);
        m_Oculus_RightGrab = m_Oculus.FindAction("RightGrab", throwIfNotFound: true);
        // Index
        m_Index = asset.FindActionMap("Index", throwIfNotFound: true);
        m_Index_Move = m_Index.FindAction("Move", throwIfNotFound: true);
        m_Index_Turn = m_Index.FindAction("Turn", throwIfNotFound: true);
        m_Index_Jump = m_Index.FindAction("Jump", throwIfNotFound: true);
        m_Index_Dashboard = m_Index.FindAction("Dashboard", throwIfNotFound: true);
        m_Index_Action = m_Index.FindAction("Action", throwIfNotFound: true);
        m_Index_ToggleMicrophone = m_Index.FindAction("ToggleMicrophone", throwIfNotFound: true);
        m_Index_PrimaryClick = m_Index.FindAction("PrimaryClick", throwIfNotFound: true);
        m_Index_SecondaryClick = m_Index.FindAction("SecondaryClick", throwIfNotFound: true);
        m_Index_LeftGrab = m_Index.FindAction("LeftGrab", throwIfNotFound: true);
        m_Index_RightGrab = m_Index.FindAction("RightGrab", throwIfNotFound: true);
        // Vive
        m_Vive = asset.FindActionMap("Vive", throwIfNotFound: true);
        m_Vive_Move = m_Vive.FindAction("Move", throwIfNotFound: true);
        m_Vive_Turn = m_Vive.FindAction("Turn", throwIfNotFound: true);
        m_Vive_Jump = m_Vive.FindAction("Jump", throwIfNotFound: true);
        m_Vive_Dashboard = m_Vive.FindAction("Dashboard", throwIfNotFound: true);
        m_Vive_Action = m_Vive.FindAction("Action", throwIfNotFound: true);
        m_Vive_ToggleMicrophone = m_Vive.FindAction("ToggleMicrophone", throwIfNotFound: true);
        m_Vive_PrimaryClick = m_Vive.FindAction("PrimaryClick", throwIfNotFound: true);
        m_Vive_SecondaryClick = m_Vive.FindAction("SecondaryClick", throwIfNotFound: true);
        m_Vive_LeftGrab = m_Vive.FindAction("LeftGrab", throwIfNotFound: true);
        m_Vive_RightGrab = m_Vive.FindAction("RightGrab", throwIfNotFound: true);
        // Unknown
        m_Unknown = asset.FindActionMap("Unknown", throwIfNotFound: true);
        m_Unknown_Move = m_Unknown.FindAction("Move", throwIfNotFound: true);
        m_Unknown_Turn = m_Unknown.FindAction("Turn", throwIfNotFound: true);
        m_Unknown_Jump = m_Unknown.FindAction("Jump", throwIfNotFound: true);
        m_Unknown_Dashboard = m_Unknown.FindAction("Dashboard", throwIfNotFound: true);
        m_Unknown_Action = m_Unknown.FindAction("Action", throwIfNotFound: true);
        m_Unknown_ToggleMicrophone = m_Unknown.FindAction("ToggleMicrophone", throwIfNotFound: true);
        m_Unknown_PrimaryClick = m_Unknown.FindAction("PrimaryClick", throwIfNotFound: true);
        m_Unknown_SecondaryClick = m_Unknown.FindAction("SecondaryClick", throwIfNotFound: true);
        m_Unknown_LeftGrab = m_Unknown.FindAction("LeftGrab", throwIfNotFound: true);
        m_Unknown_RightGrab = m_Unknown.FindAction("RightGrab", throwIfNotFound: true);
        m_Unknown_LeftFootTrackerIsTracked = m_Unknown.FindAction("LeftFootTrackerIsTracked", throwIfNotFound: true);
        m_Unknown_LeftFootTrackerPosition = m_Unknown.FindAction("LeftFootTrackerPosition", throwIfNotFound: true);
        m_Unknown_LeftFootTrackerRotation = m_Unknown.FindAction("LeftFootTrackerRotation", throwIfNotFound: true);
        m_Unknown_RightFootTrackerIsTracked = m_Unknown.FindAction("RightFootTrackerIsTracked", throwIfNotFound: true);
        m_Unknown_RightFootTrackerPosition = m_Unknown.FindAction("RightFootTrackerPosition", throwIfNotFound: true);
        m_Unknown_RightFootTrackerRotation = m_Unknown.FindAction("RightFootTrackerRotation", throwIfNotFound: true);
        m_Unknown_HipTrackerIsTracked = m_Unknown.FindAction("HipTrackerIsTracked", throwIfNotFound: true);
        m_Unknown_HipTrackerPosition = m_Unknown.FindAction("HipTrackerPosition", throwIfNotFound: true);
        m_Unknown_HipTrackerRotation = m_Unknown.FindAction("HipTrackerRotation", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Oculus
    private readonly InputActionMap m_Oculus;
    private List<IOculusActions> m_OculusActionsCallbackInterfaces = new List<IOculusActions>();
    private readonly InputAction m_Oculus_Move;
    private readonly InputAction m_Oculus_Turn;
    private readonly InputAction m_Oculus_Jump;
    private readonly InputAction m_Oculus_Dashboard;
    private readonly InputAction m_Oculus_Action;
    private readonly InputAction m_Oculus_ToggleMicrophone;
    private readonly InputAction m_Oculus_PrimaryClick;
    private readonly InputAction m_Oculus_SecondaryClick;
    private readonly InputAction m_Oculus_LeftGrab;
    private readonly InputAction m_Oculus_RightGrab;
    public struct OculusActions
    {
        private @VRBindings m_Wrapper;
        public OculusActions(@VRBindings wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Oculus_Move;
        public InputAction @Turn => m_Wrapper.m_Oculus_Turn;
        public InputAction @Jump => m_Wrapper.m_Oculus_Jump;
        public InputAction @Dashboard => m_Wrapper.m_Oculus_Dashboard;
        public InputAction @Action => m_Wrapper.m_Oculus_Action;
        public InputAction @ToggleMicrophone => m_Wrapper.m_Oculus_ToggleMicrophone;
        public InputAction @PrimaryClick => m_Wrapper.m_Oculus_PrimaryClick;
        public InputAction @SecondaryClick => m_Wrapper.m_Oculus_SecondaryClick;
        public InputAction @LeftGrab => m_Wrapper.m_Oculus_LeftGrab;
        public InputAction @RightGrab => m_Wrapper.m_Oculus_RightGrab;
        public InputActionMap Get() { return m_Wrapper.m_Oculus; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(OculusActions set) { return set.Get(); }
        public void AddCallbacks(IOculusActions instance)
        {
            if (instance == null || m_Wrapper.m_OculusActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_OculusActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Turn.started += instance.OnTurn;
            @Turn.performed += instance.OnTurn;
            @Turn.canceled += instance.OnTurn;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Dashboard.started += instance.OnDashboard;
            @Dashboard.performed += instance.OnDashboard;
            @Dashboard.canceled += instance.OnDashboard;
            @Action.started += instance.OnAction;
            @Action.performed += instance.OnAction;
            @Action.canceled += instance.OnAction;
            @ToggleMicrophone.started += instance.OnToggleMicrophone;
            @ToggleMicrophone.performed += instance.OnToggleMicrophone;
            @ToggleMicrophone.canceled += instance.OnToggleMicrophone;
            @PrimaryClick.started += instance.OnPrimaryClick;
            @PrimaryClick.performed += instance.OnPrimaryClick;
            @PrimaryClick.canceled += instance.OnPrimaryClick;
            @SecondaryClick.started += instance.OnSecondaryClick;
            @SecondaryClick.performed += instance.OnSecondaryClick;
            @SecondaryClick.canceled += instance.OnSecondaryClick;
            @LeftGrab.started += instance.OnLeftGrab;
            @LeftGrab.performed += instance.OnLeftGrab;
            @LeftGrab.canceled += instance.OnLeftGrab;
            @RightGrab.started += instance.OnRightGrab;
            @RightGrab.performed += instance.OnRightGrab;
            @RightGrab.canceled += instance.OnRightGrab;
        }

        private void UnregisterCallbacks(IOculusActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Turn.started -= instance.OnTurn;
            @Turn.performed -= instance.OnTurn;
            @Turn.canceled -= instance.OnTurn;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Dashboard.started -= instance.OnDashboard;
            @Dashboard.performed -= instance.OnDashboard;
            @Dashboard.canceled -= instance.OnDashboard;
            @Action.started -= instance.OnAction;
            @Action.performed -= instance.OnAction;
            @Action.canceled -= instance.OnAction;
            @ToggleMicrophone.started -= instance.OnToggleMicrophone;
            @ToggleMicrophone.performed -= instance.OnToggleMicrophone;
            @ToggleMicrophone.canceled -= instance.OnToggleMicrophone;
            @PrimaryClick.started -= instance.OnPrimaryClick;
            @PrimaryClick.performed -= instance.OnPrimaryClick;
            @PrimaryClick.canceled -= instance.OnPrimaryClick;
            @SecondaryClick.started -= instance.OnSecondaryClick;
            @SecondaryClick.performed -= instance.OnSecondaryClick;
            @SecondaryClick.canceled -= instance.OnSecondaryClick;
            @LeftGrab.started -= instance.OnLeftGrab;
            @LeftGrab.performed -= instance.OnLeftGrab;
            @LeftGrab.canceled -= instance.OnLeftGrab;
            @RightGrab.started -= instance.OnRightGrab;
            @RightGrab.performed -= instance.OnRightGrab;
            @RightGrab.canceled -= instance.OnRightGrab;
        }

        public void RemoveCallbacks(IOculusActions instance)
        {
            if (m_Wrapper.m_OculusActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IOculusActions instance)
        {
            foreach (var item in m_Wrapper.m_OculusActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_OculusActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public OculusActions @Oculus => new OculusActions(this);

    // Index
    private readonly InputActionMap m_Index;
    private List<IIndexActions> m_IndexActionsCallbackInterfaces = new List<IIndexActions>();
    private readonly InputAction m_Index_Move;
    private readonly InputAction m_Index_Turn;
    private readonly InputAction m_Index_Jump;
    private readonly InputAction m_Index_Dashboard;
    private readonly InputAction m_Index_Action;
    private readonly InputAction m_Index_ToggleMicrophone;
    private readonly InputAction m_Index_PrimaryClick;
    private readonly InputAction m_Index_SecondaryClick;
    private readonly InputAction m_Index_LeftGrab;
    private readonly InputAction m_Index_RightGrab;
    public struct IndexActions
    {
        private @VRBindings m_Wrapper;
        public IndexActions(@VRBindings wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Index_Move;
        public InputAction @Turn => m_Wrapper.m_Index_Turn;
        public InputAction @Jump => m_Wrapper.m_Index_Jump;
        public InputAction @Dashboard => m_Wrapper.m_Index_Dashboard;
        public InputAction @Action => m_Wrapper.m_Index_Action;
        public InputAction @ToggleMicrophone => m_Wrapper.m_Index_ToggleMicrophone;
        public InputAction @PrimaryClick => m_Wrapper.m_Index_PrimaryClick;
        public InputAction @SecondaryClick => m_Wrapper.m_Index_SecondaryClick;
        public InputAction @LeftGrab => m_Wrapper.m_Index_LeftGrab;
        public InputAction @RightGrab => m_Wrapper.m_Index_RightGrab;
        public InputActionMap Get() { return m_Wrapper.m_Index; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(IndexActions set) { return set.Get(); }
        public void AddCallbacks(IIndexActions instance)
        {
            if (instance == null || m_Wrapper.m_IndexActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_IndexActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Turn.started += instance.OnTurn;
            @Turn.performed += instance.OnTurn;
            @Turn.canceled += instance.OnTurn;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Dashboard.started += instance.OnDashboard;
            @Dashboard.performed += instance.OnDashboard;
            @Dashboard.canceled += instance.OnDashboard;
            @Action.started += instance.OnAction;
            @Action.performed += instance.OnAction;
            @Action.canceled += instance.OnAction;
            @ToggleMicrophone.started += instance.OnToggleMicrophone;
            @ToggleMicrophone.performed += instance.OnToggleMicrophone;
            @ToggleMicrophone.canceled += instance.OnToggleMicrophone;
            @PrimaryClick.started += instance.OnPrimaryClick;
            @PrimaryClick.performed += instance.OnPrimaryClick;
            @PrimaryClick.canceled += instance.OnPrimaryClick;
            @SecondaryClick.started += instance.OnSecondaryClick;
            @SecondaryClick.performed += instance.OnSecondaryClick;
            @SecondaryClick.canceled += instance.OnSecondaryClick;
            @LeftGrab.started += instance.OnLeftGrab;
            @LeftGrab.performed += instance.OnLeftGrab;
            @LeftGrab.canceled += instance.OnLeftGrab;
            @RightGrab.started += instance.OnRightGrab;
            @RightGrab.performed += instance.OnRightGrab;
            @RightGrab.canceled += instance.OnRightGrab;
        }

        private void UnregisterCallbacks(IIndexActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Turn.started -= instance.OnTurn;
            @Turn.performed -= instance.OnTurn;
            @Turn.canceled -= instance.OnTurn;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Dashboard.started -= instance.OnDashboard;
            @Dashboard.performed -= instance.OnDashboard;
            @Dashboard.canceled -= instance.OnDashboard;
            @Action.started -= instance.OnAction;
            @Action.performed -= instance.OnAction;
            @Action.canceled -= instance.OnAction;
            @ToggleMicrophone.started -= instance.OnToggleMicrophone;
            @ToggleMicrophone.performed -= instance.OnToggleMicrophone;
            @ToggleMicrophone.canceled -= instance.OnToggleMicrophone;
            @PrimaryClick.started -= instance.OnPrimaryClick;
            @PrimaryClick.performed -= instance.OnPrimaryClick;
            @PrimaryClick.canceled -= instance.OnPrimaryClick;
            @SecondaryClick.started -= instance.OnSecondaryClick;
            @SecondaryClick.performed -= instance.OnSecondaryClick;
            @SecondaryClick.canceled -= instance.OnSecondaryClick;
            @LeftGrab.started -= instance.OnLeftGrab;
            @LeftGrab.performed -= instance.OnLeftGrab;
            @LeftGrab.canceled -= instance.OnLeftGrab;
            @RightGrab.started -= instance.OnRightGrab;
            @RightGrab.performed -= instance.OnRightGrab;
            @RightGrab.canceled -= instance.OnRightGrab;
        }

        public void RemoveCallbacks(IIndexActions instance)
        {
            if (m_Wrapper.m_IndexActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IIndexActions instance)
        {
            foreach (var item in m_Wrapper.m_IndexActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_IndexActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public IndexActions @Index => new IndexActions(this);

    // Vive
    private readonly InputActionMap m_Vive;
    private List<IViveActions> m_ViveActionsCallbackInterfaces = new List<IViveActions>();
    private readonly InputAction m_Vive_Move;
    private readonly InputAction m_Vive_Turn;
    private readonly InputAction m_Vive_Jump;
    private readonly InputAction m_Vive_Dashboard;
    private readonly InputAction m_Vive_Action;
    private readonly InputAction m_Vive_ToggleMicrophone;
    private readonly InputAction m_Vive_PrimaryClick;
    private readonly InputAction m_Vive_SecondaryClick;
    private readonly InputAction m_Vive_LeftGrab;
    private readonly InputAction m_Vive_RightGrab;
    public struct ViveActions
    {
        private @VRBindings m_Wrapper;
        public ViveActions(@VRBindings wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Vive_Move;
        public InputAction @Turn => m_Wrapper.m_Vive_Turn;
        public InputAction @Jump => m_Wrapper.m_Vive_Jump;
        public InputAction @Dashboard => m_Wrapper.m_Vive_Dashboard;
        public InputAction @Action => m_Wrapper.m_Vive_Action;
        public InputAction @ToggleMicrophone => m_Wrapper.m_Vive_ToggleMicrophone;
        public InputAction @PrimaryClick => m_Wrapper.m_Vive_PrimaryClick;
        public InputAction @SecondaryClick => m_Wrapper.m_Vive_SecondaryClick;
        public InputAction @LeftGrab => m_Wrapper.m_Vive_LeftGrab;
        public InputAction @RightGrab => m_Wrapper.m_Vive_RightGrab;
        public InputActionMap Get() { return m_Wrapper.m_Vive; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ViveActions set) { return set.Get(); }
        public void AddCallbacks(IViveActions instance)
        {
            if (instance == null || m_Wrapper.m_ViveActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ViveActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Turn.started += instance.OnTurn;
            @Turn.performed += instance.OnTurn;
            @Turn.canceled += instance.OnTurn;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Dashboard.started += instance.OnDashboard;
            @Dashboard.performed += instance.OnDashboard;
            @Dashboard.canceled += instance.OnDashboard;
            @Action.started += instance.OnAction;
            @Action.performed += instance.OnAction;
            @Action.canceled += instance.OnAction;
            @ToggleMicrophone.started += instance.OnToggleMicrophone;
            @ToggleMicrophone.performed += instance.OnToggleMicrophone;
            @ToggleMicrophone.canceled += instance.OnToggleMicrophone;
            @PrimaryClick.started += instance.OnPrimaryClick;
            @PrimaryClick.performed += instance.OnPrimaryClick;
            @PrimaryClick.canceled += instance.OnPrimaryClick;
            @SecondaryClick.started += instance.OnSecondaryClick;
            @SecondaryClick.performed += instance.OnSecondaryClick;
            @SecondaryClick.canceled += instance.OnSecondaryClick;
            @LeftGrab.started += instance.OnLeftGrab;
            @LeftGrab.performed += instance.OnLeftGrab;
            @LeftGrab.canceled += instance.OnLeftGrab;
            @RightGrab.started += instance.OnRightGrab;
            @RightGrab.performed += instance.OnRightGrab;
            @RightGrab.canceled += instance.OnRightGrab;
        }

        private void UnregisterCallbacks(IViveActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Turn.started -= instance.OnTurn;
            @Turn.performed -= instance.OnTurn;
            @Turn.canceled -= instance.OnTurn;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Dashboard.started -= instance.OnDashboard;
            @Dashboard.performed -= instance.OnDashboard;
            @Dashboard.canceled -= instance.OnDashboard;
            @Action.started -= instance.OnAction;
            @Action.performed -= instance.OnAction;
            @Action.canceled -= instance.OnAction;
            @ToggleMicrophone.started -= instance.OnToggleMicrophone;
            @ToggleMicrophone.performed -= instance.OnToggleMicrophone;
            @ToggleMicrophone.canceled -= instance.OnToggleMicrophone;
            @PrimaryClick.started -= instance.OnPrimaryClick;
            @PrimaryClick.performed -= instance.OnPrimaryClick;
            @PrimaryClick.canceled -= instance.OnPrimaryClick;
            @SecondaryClick.started -= instance.OnSecondaryClick;
            @SecondaryClick.performed -= instance.OnSecondaryClick;
            @SecondaryClick.canceled -= instance.OnSecondaryClick;
            @LeftGrab.started -= instance.OnLeftGrab;
            @LeftGrab.performed -= instance.OnLeftGrab;
            @LeftGrab.canceled -= instance.OnLeftGrab;
            @RightGrab.started -= instance.OnRightGrab;
            @RightGrab.performed -= instance.OnRightGrab;
            @RightGrab.canceled -= instance.OnRightGrab;
        }

        public void RemoveCallbacks(IViveActions instance)
        {
            if (m_Wrapper.m_ViveActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IViveActions instance)
        {
            foreach (var item in m_Wrapper.m_ViveActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ViveActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ViveActions @Vive => new ViveActions(this);

    // Unknown
    private readonly InputActionMap m_Unknown;
    private List<IUnknownActions> m_UnknownActionsCallbackInterfaces = new List<IUnknownActions>();
    private readonly InputAction m_Unknown_Move;
    private readonly InputAction m_Unknown_Turn;
    private readonly InputAction m_Unknown_Jump;
    private readonly InputAction m_Unknown_Dashboard;
    private readonly InputAction m_Unknown_Action;
    private readonly InputAction m_Unknown_ToggleMicrophone;
    private readonly InputAction m_Unknown_PrimaryClick;
    private readonly InputAction m_Unknown_SecondaryClick;
    private readonly InputAction m_Unknown_LeftGrab;
    private readonly InputAction m_Unknown_RightGrab;
    private readonly InputAction m_Unknown_LeftFootTrackerIsTracked;
    private readonly InputAction m_Unknown_LeftFootTrackerPosition;
    private readonly InputAction m_Unknown_LeftFootTrackerRotation;
    private readonly InputAction m_Unknown_RightFootTrackerIsTracked;
    private readonly InputAction m_Unknown_RightFootTrackerPosition;
    private readonly InputAction m_Unknown_RightFootTrackerRotation;
    private readonly InputAction m_Unknown_HipTrackerIsTracked;
    private readonly InputAction m_Unknown_HipTrackerPosition;
    private readonly InputAction m_Unknown_HipTrackerRotation;
    public struct UnknownActions
    {
        private @VRBindings m_Wrapper;
        public UnknownActions(@VRBindings wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Unknown_Move;
        public InputAction @Turn => m_Wrapper.m_Unknown_Turn;
        public InputAction @Jump => m_Wrapper.m_Unknown_Jump;
        public InputAction @Dashboard => m_Wrapper.m_Unknown_Dashboard;
        public InputAction @Action => m_Wrapper.m_Unknown_Action;
        public InputAction @ToggleMicrophone => m_Wrapper.m_Unknown_ToggleMicrophone;
        public InputAction @PrimaryClick => m_Wrapper.m_Unknown_PrimaryClick;
        public InputAction @SecondaryClick => m_Wrapper.m_Unknown_SecondaryClick;
        public InputAction @LeftGrab => m_Wrapper.m_Unknown_LeftGrab;
        public InputAction @RightGrab => m_Wrapper.m_Unknown_RightGrab;
        public InputAction @LeftFootTrackerIsTracked => m_Wrapper.m_Unknown_LeftFootTrackerIsTracked;
        public InputAction @LeftFootTrackerPosition => m_Wrapper.m_Unknown_LeftFootTrackerPosition;
        public InputAction @LeftFootTrackerRotation => m_Wrapper.m_Unknown_LeftFootTrackerRotation;
        public InputAction @RightFootTrackerIsTracked => m_Wrapper.m_Unknown_RightFootTrackerIsTracked;
        public InputAction @RightFootTrackerPosition => m_Wrapper.m_Unknown_RightFootTrackerPosition;
        public InputAction @RightFootTrackerRotation => m_Wrapper.m_Unknown_RightFootTrackerRotation;
        public InputAction @HipTrackerIsTracked => m_Wrapper.m_Unknown_HipTrackerIsTracked;
        public InputAction @HipTrackerPosition => m_Wrapper.m_Unknown_HipTrackerPosition;
        public InputAction @HipTrackerRotation => m_Wrapper.m_Unknown_HipTrackerRotation;
        public InputActionMap Get() { return m_Wrapper.m_Unknown; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UnknownActions set) { return set.Get(); }
        public void AddCallbacks(IUnknownActions instance)
        {
            if (instance == null || m_Wrapper.m_UnknownActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UnknownActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Turn.started += instance.OnTurn;
            @Turn.performed += instance.OnTurn;
            @Turn.canceled += instance.OnTurn;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Dashboard.started += instance.OnDashboard;
            @Dashboard.performed += instance.OnDashboard;
            @Dashboard.canceled += instance.OnDashboard;
            @Action.started += instance.OnAction;
            @Action.performed += instance.OnAction;
            @Action.canceled += instance.OnAction;
            @ToggleMicrophone.started += instance.OnToggleMicrophone;
            @ToggleMicrophone.performed += instance.OnToggleMicrophone;
            @ToggleMicrophone.canceled += instance.OnToggleMicrophone;
            @PrimaryClick.started += instance.OnPrimaryClick;
            @PrimaryClick.performed += instance.OnPrimaryClick;
            @PrimaryClick.canceled += instance.OnPrimaryClick;
            @SecondaryClick.started += instance.OnSecondaryClick;
            @SecondaryClick.performed += instance.OnSecondaryClick;
            @SecondaryClick.canceled += instance.OnSecondaryClick;
            @LeftGrab.started += instance.OnLeftGrab;
            @LeftGrab.performed += instance.OnLeftGrab;
            @LeftGrab.canceled += instance.OnLeftGrab;
            @RightGrab.started += instance.OnRightGrab;
            @RightGrab.performed += instance.OnRightGrab;
            @RightGrab.canceled += instance.OnRightGrab;
            @LeftFootTrackerIsTracked.started += instance.OnLeftFootTrackerIsTracked;
            @LeftFootTrackerIsTracked.performed += instance.OnLeftFootTrackerIsTracked;
            @LeftFootTrackerIsTracked.canceled += instance.OnLeftFootTrackerIsTracked;
            @LeftFootTrackerPosition.started += instance.OnLeftFootTrackerPosition;
            @LeftFootTrackerPosition.performed += instance.OnLeftFootTrackerPosition;
            @LeftFootTrackerPosition.canceled += instance.OnLeftFootTrackerPosition;
            @LeftFootTrackerRotation.started += instance.OnLeftFootTrackerRotation;
            @LeftFootTrackerRotation.performed += instance.OnLeftFootTrackerRotation;
            @LeftFootTrackerRotation.canceled += instance.OnLeftFootTrackerRotation;
            @RightFootTrackerIsTracked.started += instance.OnRightFootTrackerIsTracked;
            @RightFootTrackerIsTracked.performed += instance.OnRightFootTrackerIsTracked;
            @RightFootTrackerIsTracked.canceled += instance.OnRightFootTrackerIsTracked;
            @RightFootTrackerPosition.started += instance.OnRightFootTrackerPosition;
            @RightFootTrackerPosition.performed += instance.OnRightFootTrackerPosition;
            @RightFootTrackerPosition.canceled += instance.OnRightFootTrackerPosition;
            @RightFootTrackerRotation.started += instance.OnRightFootTrackerRotation;
            @RightFootTrackerRotation.performed += instance.OnRightFootTrackerRotation;
            @RightFootTrackerRotation.canceled += instance.OnRightFootTrackerRotation;
            @HipTrackerIsTracked.started += instance.OnHipTrackerIsTracked;
            @HipTrackerIsTracked.performed += instance.OnHipTrackerIsTracked;
            @HipTrackerIsTracked.canceled += instance.OnHipTrackerIsTracked;
            @HipTrackerPosition.started += instance.OnHipTrackerPosition;
            @HipTrackerPosition.performed += instance.OnHipTrackerPosition;
            @HipTrackerPosition.canceled += instance.OnHipTrackerPosition;
            @HipTrackerRotation.started += instance.OnHipTrackerRotation;
            @HipTrackerRotation.performed += instance.OnHipTrackerRotation;
            @HipTrackerRotation.canceled += instance.OnHipTrackerRotation;
        }

        private void UnregisterCallbacks(IUnknownActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Turn.started -= instance.OnTurn;
            @Turn.performed -= instance.OnTurn;
            @Turn.canceled -= instance.OnTurn;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Dashboard.started -= instance.OnDashboard;
            @Dashboard.performed -= instance.OnDashboard;
            @Dashboard.canceled -= instance.OnDashboard;
            @Action.started -= instance.OnAction;
            @Action.performed -= instance.OnAction;
            @Action.canceled -= instance.OnAction;
            @ToggleMicrophone.started -= instance.OnToggleMicrophone;
            @ToggleMicrophone.performed -= instance.OnToggleMicrophone;
            @ToggleMicrophone.canceled -= instance.OnToggleMicrophone;
            @PrimaryClick.started -= instance.OnPrimaryClick;
            @PrimaryClick.performed -= instance.OnPrimaryClick;
            @PrimaryClick.canceled -= instance.OnPrimaryClick;
            @SecondaryClick.started -= instance.OnSecondaryClick;
            @SecondaryClick.performed -= instance.OnSecondaryClick;
            @SecondaryClick.canceled -= instance.OnSecondaryClick;
            @LeftGrab.started -= instance.OnLeftGrab;
            @LeftGrab.performed -= instance.OnLeftGrab;
            @LeftGrab.canceled -= instance.OnLeftGrab;
            @RightGrab.started -= instance.OnRightGrab;
            @RightGrab.performed -= instance.OnRightGrab;
            @RightGrab.canceled -= instance.OnRightGrab;
            @LeftFootTrackerIsTracked.started -= instance.OnLeftFootTrackerIsTracked;
            @LeftFootTrackerIsTracked.performed -= instance.OnLeftFootTrackerIsTracked;
            @LeftFootTrackerIsTracked.canceled -= instance.OnLeftFootTrackerIsTracked;
            @LeftFootTrackerPosition.started -= instance.OnLeftFootTrackerPosition;
            @LeftFootTrackerPosition.performed -= instance.OnLeftFootTrackerPosition;
            @LeftFootTrackerPosition.canceled -= instance.OnLeftFootTrackerPosition;
            @LeftFootTrackerRotation.started -= instance.OnLeftFootTrackerRotation;
            @LeftFootTrackerRotation.performed -= instance.OnLeftFootTrackerRotation;
            @LeftFootTrackerRotation.canceled -= instance.OnLeftFootTrackerRotation;
            @RightFootTrackerIsTracked.started -= instance.OnRightFootTrackerIsTracked;
            @RightFootTrackerIsTracked.performed -= instance.OnRightFootTrackerIsTracked;
            @RightFootTrackerIsTracked.canceled -= instance.OnRightFootTrackerIsTracked;
            @RightFootTrackerPosition.started -= instance.OnRightFootTrackerPosition;
            @RightFootTrackerPosition.performed -= instance.OnRightFootTrackerPosition;
            @RightFootTrackerPosition.canceled -= instance.OnRightFootTrackerPosition;
            @RightFootTrackerRotation.started -= instance.OnRightFootTrackerRotation;
            @RightFootTrackerRotation.performed -= instance.OnRightFootTrackerRotation;
            @RightFootTrackerRotation.canceled -= instance.OnRightFootTrackerRotation;
            @HipTrackerIsTracked.started -= instance.OnHipTrackerIsTracked;
            @HipTrackerIsTracked.performed -= instance.OnHipTrackerIsTracked;
            @HipTrackerIsTracked.canceled -= instance.OnHipTrackerIsTracked;
            @HipTrackerPosition.started -= instance.OnHipTrackerPosition;
            @HipTrackerPosition.performed -= instance.OnHipTrackerPosition;
            @HipTrackerPosition.canceled -= instance.OnHipTrackerPosition;
            @HipTrackerRotation.started -= instance.OnHipTrackerRotation;
            @HipTrackerRotation.performed -= instance.OnHipTrackerRotation;
            @HipTrackerRotation.canceled -= instance.OnHipTrackerRotation;
        }

        public void RemoveCallbacks(IUnknownActions instance)
        {
            if (m_Wrapper.m_UnknownActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUnknownActions instance)
        {
            foreach (var item in m_Wrapper.m_UnknownActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UnknownActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UnknownActions @Unknown => new UnknownActions(this);
    public interface IOculusActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnTurn(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnDashboard(InputAction.CallbackContext context);
        void OnAction(InputAction.CallbackContext context);
        void OnToggleMicrophone(InputAction.CallbackContext context);
        void OnPrimaryClick(InputAction.CallbackContext context);
        void OnSecondaryClick(InputAction.CallbackContext context);
        void OnLeftGrab(InputAction.CallbackContext context);
        void OnRightGrab(InputAction.CallbackContext context);
    }
    public interface IIndexActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnTurn(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnDashboard(InputAction.CallbackContext context);
        void OnAction(InputAction.CallbackContext context);
        void OnToggleMicrophone(InputAction.CallbackContext context);
        void OnPrimaryClick(InputAction.CallbackContext context);
        void OnSecondaryClick(InputAction.CallbackContext context);
        void OnLeftGrab(InputAction.CallbackContext context);
        void OnRightGrab(InputAction.CallbackContext context);
    }
    public interface IViveActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnTurn(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnDashboard(InputAction.CallbackContext context);
        void OnAction(InputAction.CallbackContext context);
        void OnToggleMicrophone(InputAction.CallbackContext context);
        void OnPrimaryClick(InputAction.CallbackContext context);
        void OnSecondaryClick(InputAction.CallbackContext context);
        void OnLeftGrab(InputAction.CallbackContext context);
        void OnRightGrab(InputAction.CallbackContext context);
    }
    public interface IUnknownActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnTurn(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnDashboard(InputAction.CallbackContext context);
        void OnAction(InputAction.CallbackContext context);
        void OnToggleMicrophone(InputAction.CallbackContext context);
        void OnPrimaryClick(InputAction.CallbackContext context);
        void OnSecondaryClick(InputAction.CallbackContext context);
        void OnLeftGrab(InputAction.CallbackContext context);
        void OnRightGrab(InputAction.CallbackContext context);
        void OnLeftFootTrackerIsTracked(InputAction.CallbackContext context);
        void OnLeftFootTrackerPosition(InputAction.CallbackContext context);
        void OnLeftFootTrackerRotation(InputAction.CallbackContext context);
        void OnRightFootTrackerIsTracked(InputAction.CallbackContext context);
        void OnRightFootTrackerPosition(InputAction.CallbackContext context);
        void OnRightFootTrackerRotation(InputAction.CallbackContext context);
        void OnHipTrackerIsTracked(InputAction.CallbackContext context);
        void OnHipTrackerPosition(InputAction.CallbackContext context);
        void OnHipTrackerRotation(InputAction.CallbackContext context);
    }
}
